#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/* setup for urob timerless HRM */

#define QUICK_TAP_MS 175 

&lt {
  flavor = "balanced";
  tapping-term-ms = <280>;
  quick-tap-ms = <QUICK_TAP_MS>;
  require-prior-idle-ms = <150>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <24 23>;
        };

        Quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <36 37>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <22 21>;
        };

        Equals {
            bindings = <&kp EQUAL>;
            key-positions = <23 22>;
        };

        LeftParen {
            bindings = <&kp LPAR>;
            key-positions = <17 18>;
        };

        RightParen {
            bindings = <&kp RPAR>;
            key-positions = <20 21>;
        };

        LBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        RBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 34>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <46 60>;
        };

        LBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <44 43>;
        };

        RBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <46 47>;
        };
    };

    behaviors {
        /* Left-hand HRMs */
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60>;
            hold-trigger-on-release;
        };

        /* Right-hand HRMs */
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&gresc      &kp N1     &kp N2        &kp N3        &kp N4       &kp N5        &kp UP_ARROW     &kp N6      &kp N7       &kp N8         &kp N9             &kp N0           &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R        &kp T         &kp DOWN_ARROW   &kp Y       &kp U        &kp I          &kp O              &kp P            &kp BSLH
&caps_word  &hml LCTRL A &hml LEFT_ALT S &hml LEFT_GUI D &hml LSHIFT F &kp G         &kp LEFT_ARROW   &kp H       &hmr RSHIFT J &hmr RIGHT_GUI K &hmr RIGHT_ALT L &hmr RCTRL SEMICOLON &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V        &kp B         &kp RIGHT_ARROW  &kp N       &kp M        &kp COMMA      &kp DOT            &kp SLASH        &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 ENTER  &sk LSHIFT    &kp ENTER        &sk RSHIFT  &lt 2 SPACE  &kp BACKSPACE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp HOME         &kp UP      &kp END    &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
